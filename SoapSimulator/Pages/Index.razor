@page "/"

<PageTitle>Soap Simulator Home</PageTitle>
<MudGrid Spacing="3">
    <MudItem xs="12">
        <MudCard Square Style="height:400px">
            <MudCardHeader>
                <MudText Typo="Typo.h6">Service Actions @(CurrentConfiguration !=null?$"[{CurrentConfiguration.Name}]":"")</MudText>
            </MudCardHeader>
            <MudCardContent>
                @if (CurrentConfiguration is null)
                {
                    <MudAlert Class="mx-8" Severity="Severity.Warning">No active configuration has been set.</MudAlert>
                }
                else
                {
                    <MudTabs Border>
                        @foreach (var action in CurrentConfiguration.Actions)
                        {
                            <MudTabPanel Text="@action.MethodName">
                                <MudRadioGroup SelectedOption="@action.Status" SelectedOptionChanged="(e)=>UpdateActionStatus(action,e)" Class="pa-4" T="ActionStatus">
                                    @foreach (var item in (ActionStatus[])Enum.GetValues(typeof(ActionStatus)))
                                    {
                                        <MudRadio Color="GetColor(item)" Placement="Placement.Right" Option="item">@item.ToString().Replace("_"," ")</MudRadio><br/>
                                    }
                                </MudRadioGroup>
                            </MudTabPanel>
                        }
                    </MudTabs>
                }
            </MudCardContent>
        </MudCard>
    </MudItem>
    <MudItem xs="12">
        <MudCard Elevation="25">
            <MudCardHeader>
                <MudText Typo="Typo.h6">Service Logs</MudText>
                <MudSpacer />
                <MudCardActions>
                    <MudIconButton Title="Clear all logs." OnClick="()=>logService.ClearAll()" Icon="@Icons.Material.Filled.ClearAll" />
                </MudCardActions>
            </MudCardHeader>
            <MudCardContent Class="pa-4">
                <div class="console">
                    <p class="console-content pa-2">
                        @foreach (var log in logService.Logs)
                        {
                            @log <br />
                        }
                    </p>
                </div>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>
<style>
    .console {
        background-color: black;
        width: 100%;
        margin: auto;
        height: 300px;
        border-radius: 10px;
        padding: 10px;
        text-align: start;
    }

    .console-content {
        color: white;
        overflow: auto;
        font-family: 'JetBrains Mono'
    }
</style>
@code {
    SystemConfiguration CurrentConfiguration = new();
    protected override async Task OnInitializedAsync()
    {
        CurrentConfiguration = await configurationService.GetCurrentConfigurationAsync();
    }
    Color GetColor(ActionStatus status) => status switch{
        ActionStatus.Failure => Color.Error,
        ActionStatus.Success => Color.Success,
        ActionStatus.No_Response => Color.Info,
        ActionStatus.Not_Found => Color.Warning,
        _ => Color.Default
    };

    async void UpdateActionStatus(SoapAction action,ActionStatus status)
    {
        action.Status = status;
        await configurationService.UpdateActionAsync(action);
        StateHasChanged();
    }
}